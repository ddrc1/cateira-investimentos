# Generated by Django 5.1.5 on 2025-02-08 03:10

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apps_assets', '0009_assetprice_asset_price_open_price_non_negative_and_more'),
        ('apps_operations', '0004_alter_buy_volume_alter_custody_volume_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='custodydividend',
            name='volume',
            field=models.FloatField(default=0),
        ),
        migrations.AlterField(
            model_name='custodysnapshot',
            name='volume',
            field=models.FloatField(default=0),
        ),
        migrations.AddConstraint(
            model_name='buy',
            constraint=models.CheckConstraint(condition=models.Q(('volume__gte', 0)), name='buy_volume_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='buy',
            constraint=models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='buy_price_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custody',
            constraint=models.CheckConstraint(condition=models.Q(('volume__gte', 0)), name='custody_volume_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custody',
            constraint=models.CheckConstraint(condition=models.Q(('total_cost__gte', 0)), name='custody_total_cost_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodydividend',
            constraint=models.CheckConstraint(condition=models.Q(('volume__gte', 0)), name='custody_dividend_volume_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('volume__gte', 0)), name='custody_snapshot_volume_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('total_cost__gte', 0)), name='custody_snapshot_total_cost_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('last_price__gte', 0)), name='custody_snapshot_last_price_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('mean_price__gte', 0)), name='custody_snapshot_mean_price_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('dividend_amount_received__gte', 0)), name='custody_snapshot_dividend_amount_received_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('total_value__gte', 0)), name='custody_snapshot_total_value_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='custodysnapshot',
            constraint=models.CheckConstraint(condition=models.Q(('balance__gte', 0)), name='custody_snapshot_balance_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='sell',
            constraint=models.CheckConstraint(condition=models.Q(('volume__gte', 0)), name='sell_volume_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='sell',
            constraint=models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='sell_price_non_negative'),
        ),
    ]
